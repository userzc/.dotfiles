# -*- mode: snippet -*-
# name: ndef
# contributor: Orestis Markou
# contributor: Yasser González Fernández <yglez@uh.cu>
# contributor: René Zurita Corro <zc.rene@gmail.com>
# key: ndef
# --
def ${1:name}($2):
    """$3
    ${2:$
      (let*
        ((indent
            (concat "\n" (make-string (current-column) 32)))
           (args
            (mapconcat
             '(lambda (x)
                (if (not (string= (nth 0 x) ""))
                    (concat  (nth 0 x)
                               " :")))
             (mapcar
              '(lambda (x)
                 (mapcar
                  '(lambda (x)
                     (replace-regexp-in-string "[[:blank:]]*$" ""
                      (replace-regexp-in-string "^[[:blank:]]*" "" x)))
                  x))
              (mapcar '(lambda (x) (split-string x "="))
                      (split-string yas-text ",")))
             indent)))
      (if (string= args "")
          (make-string 3 34)
        (mapconcat
         'identity
         (list "" "Parameters" "----------" args "" (make-string 3 34))
         indent)))
    }
    $0